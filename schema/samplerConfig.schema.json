{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://gitcdn.xyz/repo/jeffw387/VulkanSchema/master/schema/samplerConfig.schema.json",
    "type": "object",
    "definitions": {
        "filter": {
            "description": "typedef enum VkFilter {\nVK_FILTER_NEAREST = 0,\nVK_FILTER_LINEAR = 1,\nVK_FILTER_CUBIC_IMG = 1000015000,\n} VkFilter;",
            "type": "integer",
            "enum": [
                0,
                1,
                1000015000
            ]
        },
        "samplerMipmapMode": {
            "type": "integer",
            "description": "typedef enum VkSamplerMipmapMode {\nVK_SAMPLER_MIPMAP_MODE_NEAREST = 0,\nVK_SAMPLER_MIPMAP_MODE_LINEAR = 1,\n} VkSamplerMipmapMode;",
            "enum": [
                0,
                1
            ]
        },
        "samplerAddressMode": {
            "type": "integer",
            "description": "typedef enum VkSamplerAddressMode {\nVK_SAMPLER_ADDRESS_MODE_REPEAT = 0,\nVK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = 1,\nVK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = 2,\nVK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = 3,\nVK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = 4,\n} VkSamplerAddressMode;",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ]
        },
        "borderColor": {
            "type": "integer",
            "description": "typedef enum VkBorderColor {\nVK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = 0,\nVK_BORDER_COLOR_INT_TRANSPARENT_BLACK = 1,\nVK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = 2,\nVK_BORDER_COLOR_INT_OPAQUE_BLACK = 3,\nVK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = 4,\nVK_BORDER_COLOR_INT_OPAQUE_WHITE = 5,\n} VkBorderColor;",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ]
        }
    },
    "properties": {
        "magFilter": {
            "$ref": "#/definitions/filter"
        },
        "minFilter": {
            "$ref": "#/definitions/filter"
        },
        "mipmapMode": {
            "$ref": "#/definitions/samplerMipmapMode"
        },
        "addressModeU": {
            "$ref": "#/definitions/samplerAddressMode"
        },
        "addressModeV": {
            "$ref": "#/definitions/samplerAddressMode"
        },
        "addressModeW": {
            "$ref": "#/definitions/samplerAddressMode"
        },
        "mipLodBias": {
            "type": "number"
        },
        "anisotropyEnable": {
            "type": "boolean"
        },
        "maxAnisotropy": {
            "type": "number"
        },
        "compareEnable": {
            "type": "boolean"
        },
        "compareOp": {
            "$ref": "compareOp.schema.json"
        },
        "minLod": {
            "type": "number"
        },
        "maxLod": {
            "type": "number"
        },
        "borderColor": {
            "$ref": "#/definitions/borderColor"
        },
        "unnormalizedCoordinates": {
            "type": "boolean"
        }
    },
    "required": [
        "magFilter",
        "minFilter",
        "mipmapMode",
        "addressModeU",
        "addressModeV",
        "addressModeW",
        "mipLodBias",
        "anisotropyEnable",
        "maxAnisotropy",
        "compareEnable",
        "compareOp",
        "minLod",
        "maxLod",
        "borderColor",
        "unnormalizedCoordinates"
    ]
}